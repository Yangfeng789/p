//（1）#include<stdio.h>——数组中查找某一特定值 3.在数组中查找某一特定值
//int main()
//{
//	int arr[]={1,2,3,4,5,6,7,8,9};
//	int i=0;
//	int k=7;
//	int sz=sizeof(arr)/sizeof(arr[0])-1;
//	for(i=0;i<=sz;i++)
//	{
//	if(k=arr[i])
//	{
//	printf("找到了，下标是：%d\n",sz);
//	break;
//	}
//	}
//	return 0;
//}
//（2） 二分查找法
//#include<stdio.h>
//int main()
//{
//	int arr[]={1,2,3,4,5,6,7,8,9,10};
//	/*int i=0;*/
//	int left=0;
//	int sz=sizeof(arr)/sizeof(arr[0]);
//	int right=sz-1;
//	int k=7;
//	while(left<=right)
//	{
//		int mid=(left+right)/2;
//		if(arr[mid]>k)
//		{
//		right=mid-1;
//		}
//		else if(arr[mid]<k)
//		{
//		left=mid+1;
//		}
//		else
//		{
//		printf("找到了，下标是：%d\n",mid);
//		break;
//		}
//	}
//	if(left>right)
//	{
//		printf("找到了\n");
//	}	return 0;
//}
//again
#include<stdio.h>
int main()
{
	int arr[]={1,5,6,8,9,6,7,2,4};
	int left=0;
	int k=6;
	int sz=sizeof(arr)/sizeof(arr[0]);
	int right=sz-1;
    while(left<=right)
	{
	  int mid=(left+right)/2;
	  if(k<arr[mid])
	  {
		  right=mid-1;
	  }
	  else if(k>arr[mid])
		 {
			 left=mid+1;
	  }
	  else
	  {
	printf("找到了，下表是：%d\n",mid);
	break;
	  }
	}
	if(left>right)
	{
	printf("找不到");
	}
	return 0;




}
